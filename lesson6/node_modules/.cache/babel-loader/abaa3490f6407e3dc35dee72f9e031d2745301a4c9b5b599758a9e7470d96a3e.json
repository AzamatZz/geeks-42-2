{"ast":null,"code":"import React,{useState}from'react';import Todo from'../todo/Todo';import classes from'./TodoList.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";const TodoList=_ref=>{let{todoList,handleDone,handleDelete,handleEdit}=_ref;const[currentId,setCurrentId]=useState(null);console.log(currentId,'currentId');return/*#__PURE__*/_jsx(\"ul\",{className:classes.ul,children:todoList.map(todo=>/*#__PURE__*/_jsx(Todo,{todo:todo,handleDone:handleDone,handleDelete:handleDelete,handleEdit:updatedTodo=>{handleEdit(updatedTodo);setCurrentId(null);},handleCancel:()=>setCurrentId(null),setCurrentId:setCurrentId,isEdit:currentId===todo.id},todo.id))});};export default TodoList;","map":{"version":3,"names":["React","useState","Todo","classes","jsx","_jsx","TodoList","_ref","todoList","handleDone","handleDelete","handleEdit","currentId","setCurrentId","console","log","className","ul","children","map","todo","updatedTodo","handleCancel","isEdit","id"],"sources":["C:/Users/vip_AZA/WebstormProjects/geeks-42-2/lesson6/src/components/todoList/TodoList.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport Todo from '../todo/Todo';\r\nimport classes from './TodoList.module.scss';\r\n\r\n\r\nconst TodoList = ({\r\n                      todoList,\r\n                      handleDone,\r\n                      handleDelete,\r\n                      handleEdit}) => {\r\n    const [currentId, setCurrentId] = useState(null)\r\n    console.log(currentId,'currentId');\r\n    return (\r\n        <ul className={classes.ul}>\r\n            {\r\n                todoList.map(todo=> <Todo\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleDone={handleDone}\r\n                    handleDelete={handleDelete}\r\n                    handleEdit={(updatedTodo) => {\r\n                        handleEdit(updatedTodo)\r\n                        setCurrentId(null)\r\n                    }}\r\n                    handleCancel = {()=> setCurrentId(null)}\r\n                    setCurrentId={setCurrentId}\r\n                    isEdit={currentId === todo.id}\r\n                />)\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,OAAO,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG7C,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAIqB,IAJpB,CACIC,QAAQ,CACRC,UAAU,CACVC,YAAY,CACZC,UAAU,CAAC,CAAAJ,IAAA,CAC7B,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAChDa,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC,WAAW,CAAC,CAClC,mBACIP,IAAA,OAAIW,SAAS,CAAEb,OAAO,CAACc,EAAG,CAAAC,QAAA,CAElBV,QAAQ,CAACW,GAAG,CAACC,IAAI,eAAGf,IAAA,CAACH,IAAI,EAErBkB,IAAI,CAAEA,IAAK,CACXX,UAAU,CAAEA,UAAW,CACvBC,YAAY,CAAEA,YAAa,CAC3BC,UAAU,CAAGU,WAAW,EAAK,CACzBV,UAAU,CAACU,WAAW,CAAC,CACvBR,YAAY,CAAC,IAAI,CAAC,CACtB,CAAE,CACFS,YAAY,CAAIA,CAAA,GAAKT,YAAY,CAAC,IAAI,CAAE,CACxCA,YAAY,CAAEA,YAAa,CAC3BU,MAAM,CAAEX,SAAS,GAAKQ,IAAI,CAACI,EAAG,EAVzBJ,IAAI,CAACI,EAWb,CAAC,CAAC,CAEP,CAAC,CAEb,CAAC,CAED,cAAe,CAAAlB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}